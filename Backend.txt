I have an error that didnt let me save it, so I had to just send it this way. 


// Trigger to update related contacts when parent account is updated
trigger UpdateContacts on Account (after update) {
    //   List<Contact> contactsToUpdate = new List<Contact>();
    // Get the list of contacts to update
    //  for (Account acc : Trigger.new) {
    //   if (acc.PushToVendor__c != Trigger.oldMap.get(acc.Id).PushToVendor__c) {
    //      for (Contact c : [SELECT Id, Push_Date__c FROM Contact WHERE AccountId = :acc.Id]) {
    //          if (acc.PushToVendor__c == 'Yes') {
    //           c.Push_Date__c = Date.today();
    //     } else {
    //        c.Push_Date__c = null;
    //    }
    //   contactsToUpdate.add(c);
    //  }
    //  }
    //   }
    // Check if total number of contacts to update is greater than 200
    //  if (contactsToUpdate.size() > 200) {
    // If total number of contacts to update is greater than 1000
    //  if (contactsToUpdate.size() > 1000) {
    // Divide the contacts into chunks of 150 records
    //  Integer maxRecords = 150;
    //  for (Integer i=0; i<contactsToUpdate.size(); i+=maxRecords) {
    //     Integer lastIndex = i + maxRecords;
    // Check if last index is greater than total number of records
    //    if (lastIndex > contactsToUpdate.size()) {
    //    lastIndex = contactsToUpdate.size();
    //     }
    // Call the batch class for each chunk
    //  Database.executeBatch(new UpdateContactsBatch(contactsToUpdate.subList(i, lastIndex)));
    //    }
    //  } else {
    // Call the batch class
    //      Database.executeBatch(new UpdateContactsBatch(contactsToUpdate));
    //      }
    //  } else {
    // Update contacts synchronously
    //  update contactsToUpdate;
    // }
    // }
    
    // Batch apex class to update contacts
    //public class UpdateContactsBatch implements Database.Batchable<Contact> {
    //   public static void List<Contact> contacts;
    
    //  public UpdateContactsBatch(List<Contact> contacts) {
    //  this.contacts = contacts;
    // }
    
    //  public Database.QueryLocator start(Database.BatchableContext bc) {
    //    return Database.getQueryLocator(contacts);
    // }
    
    // public void execute(Database.BatchableContext bc, List<Contact> scope) {
    //     Update the contacts in the scope
    //     update scope;
    // }
    
    //  public void finish(Database.BatchableContext bc) {
    //  }
}